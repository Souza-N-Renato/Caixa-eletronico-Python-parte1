# criar 2 novas funções cadastrar usuario e cadastrar conta bancária
# função saque deve receber arguementos por keyword, sugestão de arguymentos saldo, valor, extrato, limite, numero_saques, limite_saques
# sugestão de retorno saldo e extrato

# função de deposito, devem receber arguementos apenas por posição, sugestão de argumentos saldo, valor, extrato
#retorno, saldo e extrato

#função extrato, devem receber por posição e por keyword, argumento keyword extrato
#argumento posicional saldo

#função criar usuario armazenar usuarios em uma lista, usuario deve ter nome, dt nasc, cpf e endereço
#endereço é uma string com logradouro, numero, , bairro, cidade/sigla, estado
# não pode ter 2 usuarios com mesmo cpf

# função criar conta corrente, deve armazenar contas em uma lista, uma conta é composta por agencia, numero da conta e usuario
#O numero da conta é sequencial, iniciando em 1. o numero da agencia é fixo "0001" o usuario pode ter mais d euma conta
# mas cada conta pode ter apenas um usuario

# dica para vincular um uuario a uma conta, filtre a lista de usuarios buscando o numero do cpf


import textwrap

def menu():
    menu = '''\n
    ==================== MENU ====================
    [d]\tDeposito
    [s]\tSaque 
    [e]\tExtrato
    [nc]\tNova Conta
    [lc]\tListar Contas
    [nu]\tNovo Usuario 
    [q]\tSair  
    ==>     '''
    return input(textwrap.dedent(menu))

def depositar(saldo, valor, extrato, /):

    if valor > 0:
        saldo += valor 
        extrato += f'Depósito: R$ {valor:.2f}\n'
        print('\n=== Depósito realizado com sucesso! ===')
    else:
        print('\n@@@ Operação falhou, o valor informado é inválido. @@@')

    return saldo, extrato        

def sacar(*, saldo, valor, extrato, limite, numero_saques, limite_saques):

    excedeu_saldo = valor > saldo
    excedeu_limite = valor > limite
    excedeu_saques = numero_saques >= limite_saques

    if excedeu_saldo:
        print('\n @@@ Operação falhou! Você não tem saldo suficiente @@@')

    elif excedeu_limite:
        print('\n @@@ Operação falhou! limite diario excedido @@@')

    elif excedeu_saques:
        print('\n @@@ Operação falhou! excedeu a quantidade de saques diarios @@@')    

    elif valor > 0:
        saldo -= valor
        extrato += f'Saque:\t\tR$ {valor:.2f}\n'
        numero_saques += 1
        print('\n === Saque realizado com sucesso! ===')

    else:
            print('\n @@@ Operação falhou! o valor informado é inválido @@@')

    return saldo, extrato   
     
def exibir_extrato(saldo, /, *, extrato):
    print('\n================ EXTRATO ================')   
    print('Não foram realizadas movimentações.' if not extrato else extrato)
    print(f'\n Saldo: R$ {saldo:.2f}')   
    print('\n=========================================')
     
def criar_usuario(usuarios):
    cpf = input('Informe o CPF (somente numeros): ')
    usuario = filtrar_usuario(cpf, usuarios)

    if usuario:
        print('\n@@@ Já existe usuário com esse CPF! @@@')
        return
    
    nome = input('Informe o nome completo: ')
    data_nascimento = input('Informe a data de nascimento (dd-mm-aaaa): ')
    endereco = input('Informe o endereço (logradouro, nro - bairro -cidade/sigla estado): ')

    usuarios.append({'nome': nome, 'data_nascimento': data_nascimento, 'cpf': cpf, 'endereco':endereco})

    print('=== Usuário criado com sucesso! ===')

def filtrar_usuario(cpf, usuarios):
    usuarios_filtrados = [usuario for usuario in usuarios if usuario["cpf"] == cpf]
    return usuarios_filtrados[0] if usuarios_filtrados else None    

def criar_conta(agencia, numero_conta, usuarios):
    cpf = input('Informe o CPF (somente numeros): ')
    usuario = filtrar_usuario(cpf, usuarios)

    if usuario:
        print('\n === Conta criada com sucesso! ===')
        return {'agencia': agencia, 'numero_conta': numero_conta, 'usuario': usuario}
    
    print('\n@@@ Usuário não encontrado, fluxo de criação de conta encerrada! @@@')

def listar_contas(contas):   
    for conta in contas:
        linha = f'''\
            Agência:\t{conta['agencia']}
            C/C:\t\t{conta['numero_conta']}
            Titular:\t{conta['usuario']['nome']}
        '''
        print('=' * 100)
        print(textwrap.dedent(linha))    



def main():
    LIMITE_SAQUES = 3
    AGENCIA = '0001'

    saldo  = 0
    limite = 500
    extrato  = ''
    numero_saques = 0
    usuarios = []
    contas = []
    numero_conta = 1


    while True:

        opcao = menu ()

        if opcao == 'd':
            valor = float(input('informe o valor do depósito: '))

            saldo, extrato = depositar(saldo, valor, extrato)

        elif opcao == 's':
            valor = float(input('informe o valor do saque: '))

            saldo, extrato = sacar(
                saldo=saldo,
                valor=valor,
                extrato=extrato,
                limite=limite,
                numero_saques=numero_saques,
                limite_saques=LIMITE_SAQUES,
            )


        elif opcao == 'e':
            exibir_extrato(saldo, extrato=extrato)
        
        elif opcao == 'nu':
            criar_usuario(usuarios)

        elif opcao == 'nc':
            conta = criar_conta(AGENCIA, numero_conta, usuarios)

            if conta:
                contas.append(conta)
                numero_conta +=1
        
        elif opcao == 'lc':
            listar_contas(contas)         

        elif opcao =='q':
            print('Operação escolhida Sair, tenha um bom dia ')
            break  

        else: 
            print('Operação inválida, por favor selecione novamente a operação desejada')

main()
